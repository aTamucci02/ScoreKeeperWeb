@page
@model ScoreKeeper.Pages.JudgeWaitingPageModel
@{
    ViewData["Title"] = "Judge Waiting Page";
}
<head>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <style>
        

        .main-window {
            background-color: #102F3B;
        }
    </style>
    <script src="https://code.jquery.com/jquery-2.2.4.min.js"
            integrity="sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44="
            crossorigin="anonymous"> </script>
</head>

<body onload="getGameData();">
    <!--Main section with title and main buttons-->
    <div class="main-window">

        <!--Top buttons section-->
        <div class="header">
            <div class="header-container">
                <div>
                    <button type="button" class="button buttonmed" data-bs-toggle="modal" data-bs-target="#HomeButtonModal">
                        Home
                    </button>
                </div>
                <h1 class="display-4" id="headerTitle"></h1>
                <img src="ACSMLogo.png" alt="American College of Sports Medicine Logo" style="background:transparent;width:90px;height:90px;" />
            </div>
        </div>
    </div>

    <div id="div1" style=" text-align: center; position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%); color: white; font-weight: bold;">
        <p id="judging-id">
            You are currently judging: None
        </p>
        <p id="team-total">
        </p>
        <p>
            The game will start when the game administrator is ready to begin.
        </p>
    </div>


</body>

<!-- Home Button Modal -->
<div class="modal fade" id="HomeButtonModal" tabindex="-1" aria-labelledby="HomeButtonModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content modal">
            <!-- Add the 'modal' class here -->
            <div class="modal-header d-flex justify-content-center position-relative">
                <h1 class="modal-title fs-5" id="HomeButtonModalLabel">Leave Game</h1>
                <div class="logo position-absolute end-0" style="height: 90%;"></div>
            </div>
            <div class="modal-body text-center">
                <!-- Added text in the center of the window -->
                <p>
                    Are you sure you want to go back to the home page?
                </p>
                <p>
                    You will leave the game.
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" onclick="window.location.href='/Index'" class="btn btn-submit">Confirm</button>
            </div>
        </div>
    </div>
</div>

<!-- Enter Team Name Modal -->
<div class="modal fade" id="EnterTeamModal" tabindex="-1" aria-labelledby="EnterTeamModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content modal">
            <!-- Add the 'modal' class here -->
            <div class="modal-header d-flex justify-content-center position-relative">
                <h1 class="modal-title fs-5" id="EnterTeamModalLabel">Enter Team</h1>
                <div class="logo position-absolute end-0" style="height: 90%;"></div>
            </div>
            <div class="modal-body text-center">
                <!-- Added text in the center of the window -->
                <div class="form-group">
                    <label for="team-name" class="col-form-label">Enter which team you are judging:</label>
                    <input type="text" class="form-control" id="team-name" placeholder="Team Name">
                </div>
                <div class="col-sm-4" id="team-error">
                    <small id="teamHelp" class="text-danger">
                    </small>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="window.location.href='/Index'">Cancel</button>
                <button type="button" onclick="submitTeam();" class="btn btn-primary">Confirm</button>
            </div>
        </div>
    </div>
</div>

<script>
    // Sets the title of the page
    function getGameData() {
        const searchParams = new URLSearchParams(window.location.search);
        var gamecode = searchParams.get('gamecode');
        var teamname = searchParams.get('teamname');
        var gameid = searchParams.get('gameid');
        // Check the url to see if the judge is assigned a team. If not, it prompts the judge to enter a team
        if (teamname == null) {
            $.ajax({
                url: "https://csdev.samford.edu/gamesapi/games/list",
                type: 'GET',
                dataType: 'json',
                data: {},
                crossDomain: true,
                success: function (response) {
                    JSON.stringify(response);
                    var games = response;
                    games.forEach(function (item) {
                        if (item.gamecode === gamecode) {
                            console.log(item);
                            document.getElementById('headerTitle').textContent = item.title;
                            document.getElementById('team-total').textContent = "You’ve joined the game. There are " + item.teams.length + " teams in this lobby.";
                            enterTeamNameModal();
                        }
                    });

                },
                error: function (xhr, status, error) {

                    console.log("Error: " + error.message);
                }
            });


        }else{
            updatePageInfo();
            setInterval(updatePageInfo, 5000);
        }

        function updatePageInfo(){
            console.log("Attempting to update page info. gameid: " + gameid + " teamname: " + teamname);
            $.ajax({
                url: "https://csdev.samford.edu/gamesapi/games/list",
                type: 'GET',
                dataType: 'json',
                data: {},
                crossDomain: true,
                success: function (response) {
                    JSON.stringify(response);
                    console.log(response);
                    var games = response;
                    games.forEach(function (item) {
                        if (item.id === parseInt(gameid)) {
                            console.log(item);
                            document.getElementById('headerTitle').textContent = item.title;
                            document.getElementById('judging-id').textContent = "You are currently judging: " + teamname;
                            document.getElementById('team-total').textContent = "You’ve joined the game. There are " + item.teams.length + " teams in this lobby.";
                            if (item.description == "Q1") {
                                window.location.assign("/JudgeSubmission?&teamname=" + teamname + "&gameid=" + gameid + "&qnum=1");
                            }
                        }
                    });
                
                
                },
                error: function (xhr, status, error) {

                    console.log("Error: " + error.message);
                }
            });
        
        }
    }


    function enterTeamNameModal() {
        var teamModal = new bootstrap.Modal(document.getElementById('EnterTeamModal'), {});
        teamModal.show();
    }

    function submitTeam(){
        const searchParams = new URLSearchParams(window.location.search);
        var gamecode = searchParams.get('gamecode');
        var teamname = $("#EnterTeamModal #team-name").val().trim();
        var gameid = -1;
        var teamFound = false;

        $.ajax({
            url: "https://csdev.samford.edu/gamesapi/games/list",
            type: 'GET',
            dataType: 'json',
            data: {},
            crossDomain: true,
            success: function (response) {
                JSON.stringify(response);
                var games = response;
                games.forEach(function (item) {
                    if (item.gamecode === gamecode) {
                        gameid = item.id;
                        item.teams.forEach(function (team) {
                            if(team.teamname === teamname){
                                teamFound = true;
                                $('#EnterTeamModal').modal('hide');
                                window.location.assign("/JudgeWaitingPage?gamecode=" + gamecode + "&teamname=" + teamname + "&gameid=" + gameid);
                                
                            }
                        });
                        if(!teamFound){
                            createTeam(gameid, teamname, gamecode);
                        }
                        
                    }
                });

            },
            error: function (xhr, status, error) {
                console.log("Error: " + error.message);
            }
        });
        

    }

    function createTeam(gameid, teamname, gamecode){
        $.ajax({
            url: "https://csdev.samford.edu/gamesapi/teams/add",
            type: 'POST',
            dataType: 'json',
            data: {
                "game_id": gameid,
                "teamname": teamname,
                "score": 0,
                "numcorrect": 0,
                "nummissed": 0,
                "numskipped": 0
            },
            crossDomain: true,
            success: function (response) {
                $('#EnterTeamModal').modal('hide');
                window.location.assign("/JudgeWaitingPage?gamecode=" + gamecode + "&teamname=" + teamname + "&gameid=" + gameid);
            },
            error: function (xhr, status, error) {
                console.log("Error: " + error.message);
                document.getElementById("teamHelp").textContent = 'Error creating team';
            }
        });
    }

</script>
