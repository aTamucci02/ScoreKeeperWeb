@page
@model ScoreKeeper.Pages.ScoreboardModel
@{
    ViewData["Title"] = "Scoreboard";
}
<head>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <style>
        .main-window {
            background-color: #102F3B;
        }

        table {
            border-collapse: collapse;
        }

        th,
        td {
            background-color: white;
            border: 1px solid #aaa;
            padding: 5px;
            text-align: left;
        }

    </style>
    <script src="https://code.jquery.com/jquery-2.2.4.min.js"
            integrity="sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44="
            crossorigin="anonymous"></script>
</head>

<body onload="getGameData();">
    <!--Main section with title and main buttons-->
    <div class="main-window">

        <!--Top buttons section-->
        <div class="header">
            <div class="header-container">
                <div>
                    <button type="button" class="button buttonmed" data-bs-toggle="modal" data-bs-target="#HomeButtonModal">
                        Home
                    </button>
                </div>
                <h1 class="display-4" id="headerTitle"></h1>
                <img src="~/ACSMLogo.png" alt="American College of Sports Medicine Logo" style="background:transparent;width:90px;height:90px;" />
            </div>
        </div>
        <table>
            <tr>
                <th>Place</th>
                <th>Team</th>
                <th>Score</th>
            </tr>
            <tbody id="scoreboardContent">
                <tr>
                    <td>1</td>
                    <td>Samford</td>
                    <td>1000</td>
                </tr>
                <tr>
                    <td>2</td>
                    <td>Michigan</td>
                    <td>500</td>
                </tr>
                <tr>
                    <td>3</td>
                    <td>Northwestern</td>
                    <td>250</td>
                </tr>
            </tbody>
        </table>
    </div>

    
    
</body>
<!-- Home Button Modal -->
<div class="modal fade" id="HomeButtonModal" tabindex="-1" aria-labelledby="HomeButtonModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content modal">
            <!-- Add the 'modal' class here -->
            <div class="modal-header d-flex justify-content-center position-relative">
                <h1 class="modal-title fs-5" id="HomeButtonModalLabel">Leave Game</h1>
                <div class="logo position-absolute end-0" style="height: 90%;"></div>
            </div>
            <div class="modal-body text-center">
                <!-- Added text in the center of the window -->
                <p>
                    Are you sure you want to go back to the home page?
                </p>
                <p>
                    You will leave the game.
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" onclick="window.location.href='/Index'" class="btn btn-submit">Confirm</button>
            </div>
        </div>
    </div>
</div>

<script>
    // Sets the title of the page
    function getGameData() {
        const searchParams = new URLSearchParams(window.location.search);
        var gamecode = searchParams.get('gamecode');

        $.ajax({
            url: "https://csdev.samford.edu/gamesapi/games/list",
            type: 'GET',
            dataType: 'json',
            data: {},
            crossDomain: true,
            success: function (response) {
                JSON.stringify(response);
                var games = response;
                games.forEach(function (item) {
                    if (item.gamecode === gamecode) {
                        console.log(item);
                        document.getElementById('headerTitle').textContent = item.title;
                    }
                });

            },
            error: function (xhr, status, error) {

                console.log("Error: " + error.message);
            }
        });
    }

    // Creates and sorts the leaderboard

    function displayLeaderboard() {
        let scoreExport = "";
        var rank = 1;
        const searchParams = new URLSearchParams(window.location.search);
        var gamecode = searchParams.get('gamecode');
        var teams = null;
       
        $.ajax({
            url: "https://csdev.samford.edu/gamesapi/games/list",
            type: 'GET',
            dataType: 'json',
            data: {},
            crossDomain: true,
            success: function (response) {
                JSON.stringify(response);
                var games = response;
                games.forEach(function (item) {
                    if (item.gamecode === gamecode) {
                        teams = item.teams;
                    }
                });
                
                teams.sort((team1, team2) => team2.score - team1.score);
                teams.forEach(function (team) {
                    scoreExport += '<tr><td>' + rank + '</td><td>' + team.teamname + '</td><td>' + team.score + '</td></tr>';
                    rank += 1;
                });

            },
            error: function (xhr, status, error) {

                console.log("Error: " + error.message);
            }
        });

        document.getElementById("scoreboardContent").innerHTML = scoreExport; 
    }

</script>