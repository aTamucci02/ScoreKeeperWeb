@page
@model ScoreKeeper.Pages.GameOverPageModel
@{
    ViewData["Title"] = "Game Over Page";
}
<head>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <style>

        .main-window {
            background-color: #102F3B;
        }
    </style>
    <script src="https://code.jquery.com/jquery-2.2.4.min.js"
            integrity="sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44="
            crossorigin="anonymous"></script>
</head>


<!--Main section with title and main buttons-->
<body onload="getData();">
    <div class="main-window">
        <!--Top buttons section-->
        <div class="header">
            <div class="header-container">
                <div>
                    <button type="button" class="button buttonmed" data-bs-toggle="modal" data-bs-target="#HomeButtonModal">
                        Home
                    </button>

                </div>
                <h1 class="display-4">Game Over!</h1>
                <img src="ACSMLogo.png" alt="American College of Sports Medicine Logo" style="background:transparent;width:90px;height:90px;" />
            </div>
        </div>
    </div>

    <div id="div1" onload="getData()" style=" text-align: center; position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%); color: white; font-weight: bold; ">
        <p id="teamScore" style="font-size: 24px;">
            <!-- Team score will be inserted here -->
        </p>
        <p id="teamPlacement" style="font-size: 24px;">
            <!-- Team placement will be inserted here -->
        </p>
        <br />
        <br />
        <div align="center" id="output-container" style="font-size: 20px;">
            <!--Top 5 placements will be here-->
        </div>
        <br />
        <br />
        <button type="button" class="button buttonmed" data-bs-toggle="modal" onclick="sendToScoreboard();">
            See Scoreboard
        </button>
    </div>

</body>

<script>
    var scorecode;
    // Fetch the team's total score and placement against other teams
    function getData() {
        var prevscore = null;
        var count = 0;
        var rank = 1;
        var scoreExport = '<div>Leaderboard:</div>';
        var numofties = 0;

        const searchParams = new URLSearchParams(window.location.search);
        var gameid = searchParams.get('gameid');
        var teamname = searchParams.get('teamname');
        $.ajax({
            url: "https://csdev.samford.edu/gamesapi/games/list",
            type: 'GET',
            dataType: 'json',
            data: {},
            crossDomain: true,
            success: function (response) {
                // Assuming the response is an array of team objects
                JSON.stringify(response);
                var games = response;
                games.forEach(function (game) {
                    if (game.id == gameid) {
                        var teams = game.teams;
                        var teamScore, teamPlacement;
                        teams.sort((team1, team2) => team2.score - team1.score);
                        teams.forEach(function (item) {
                            scorecode = game.gamecode;

                            // Checks if you're testing the first team
                            if (rank == 1) {
                                prevscore = item.score;
                            } else {
                                if (item.score == prevscore) {
                                    numofties += 1;
                                } else {
                                    numofties = 0;
                                }
                                prevscore = item.score;
                            }
                            if (rank <= 5 || team.teamname == teamname) {
                                // Creates inner HTML for scoreboard with the rank corrected for ties
                                scoreExport += '<div>' + (rank - numofties) + '. ' + item.teamname + ' with ' + item.score + ' points';
                            }
                            rank += 1;

                            // Calculate team placement based on the index of the team minus the number of teams with an identical score before it
                            if (item.teamname === teamname && item.game_id == gameid) {
                                teamScore = item.score;
                                teamPlacement = teams.indexOf(item) + 1 - count;
                            }
                        });
                        // Insert the team's score and placement into the HTML
                        var scoretext = "Your team's total score: " + teamScore;
                        document.getElementById("teamScore").textContent = scoretext;
                        document.getElementById("teamPlacement").textContent = "Your team's placement: " + teamPlacement;
                        document.getElementById("output-container").innerHTML = scoreExport;
                    }
                });

            },
            error: function (xhr, status, error) {
                console.log("Error: " + error.message);
            }
        });
    }
    function sendToScoreboard() {
        window.location.assign("/Scoreboard?gamecode=" + scorecode);
    }

</script>



<!-- Home Button Modal -->
<div class="modal fade" id="HomeButtonModal" tabindex="-1" aria-labelledby="HomeButtonModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="HomeButtonModalLabel">Are you sure you want to leave the game?</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" onclick="window.location.href='/Index'" class=" btn btn-primary">Confirm</button>
            </div>
        </div>
    </div>
</div>