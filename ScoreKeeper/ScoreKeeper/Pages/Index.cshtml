@page
@model IndexModel
@{
    ViewData["Title"] = "Home";
}

<head>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <script src="https://code.jquery.com/jquery-2.2.4.min.js"
            integrity="sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44="
            crossorigin="anonymous"></script>
</head>

<meta name="viewport" content="width=device-width, initial-scale=1.0">
<!--Main section with title and main buttons-->
<div class="main-window">

    <!--Top buttons section-->
    <div class="header">
        <div class="header-container">
            <div>
                <button type="button" class="button buttonsmall" data-bs-toggle="modal" data-bs-target="#CreateGameModal">
                    Create Game
                </button>
                <button type="button" class="button buttonsmall" data-bs-toggle="modal" data-bs-target="#StartGameModal">
                    Resume Game
                </button>
                <button type="button" class="button buttonsmall" data-bs-toggle="modal" data-bs-target="#RestartGameModal">
                    Start Game
                </button>
            </div>

            <h1 class="display-4">Home Page</h1>
            <img src="ACSMLogo.png" alt="American College of Sports Medicine Logo" style="background:transparent;width:90px;height:90px;" />
        </div>
    </div>

    <div class="button-container">



        <button type="button" class="button buttonbig" data-bs-toggle="modal" data-bs-target="#JoinGameModal">
            Join Game
        </button>

        <div class="break"></div>


        <button type="button" class="button buttonbig" data-bs-toggle="modal" data-bs-target="#ScoreboardModal">
            Scoreboard
        </button>

    </div>
</div>


<!-- Create Game Modal -->
<div class="modal fade" id="CreateGameModal" tabindex="-1" aria-labelledby="CreateGameModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="CreateGameModalLabel">Create Game</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label class="col-form-label">Game Name:</label>
                    <input type="text" class="form-control" id="game_title">
                </div>
                <div class="col-sm-7">
                    <small id="createGameNameHelp" class="text-danger">
                    </small>
                </div>
                <div class="form-group">
                    <label class="col-form-label">Judge Passcode:</label>
                    <input type="text" class="form-control" id="judge_code">
                </div>
                <div class="col-sm-7">
                    <small id="createJudgeCodeHelp" class="text-danger">
                    </small>
                </div>
                <div class="form-group">
                    <label class="col-form-label">Scoreboard Code:</label>
                    <input type="text" class="form-control" id="scoreboard_code">
                </div>
                <div class="col-sm-7">
                    <small id="createScoreCodeHelp" class="text-danger">
                    </small>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" onclick="createGame();" class=" btn btn-primary">Create</button>
            </div>
        </div>
    </div>
</div>

<!-- Start Game Modal -->
<div class="modal fade" id="StartGameModal" tabindex="-1" aria-labelledby="StartGameModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="StartGameModalLabel">Start or Resume Game Lobby</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="game-passcode" class="col-form-label">
                        Enter the title of the game you would like to start. Entering a title of an active game will resume the game
                    </label>
                    <input type="text" class="form-control" id="gameName" placeholder="Game Name">
                    <div id="errorText" style="color: red;"></div>
                </div>
                <div class="col-sm-4">
                    <small id="gameNameHelp" class="text-danger">
                    </small>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" onclick="StartGame();" class=" btn btn-primary">Start</button>
            </div>
        </div>
    </div>
</div>


<!-- Restart Game Modal -->
<div class="modal fade" id="RestartGameModal" tabindex="-1" aria-labelledby="RestartGameModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="RestartGameModalLabel">Restart Game to Question 1</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="game-passcode" class="col-form-label">
                        Enter the title of the game you would like to restart. Game must be active to restart
                    </label>
                    <input type="text" class="form-control" id="gameTitle" placeholder="Game Title">
                    <div id="errorText" style="color: red;"></div>
                </div>
                <div class="col-sm-4">
                    <small id="gameNameHelp" class="text-danger">
                    </small>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" id="restartButton" onclick="restartGame();" class=" btn btn-primary">Restart</button>
            </div>
        </div>
    </div>
</div>


<!-- Join Game Modal -->
<div class="modal fade" id="JoinGameModal" tabindex="-1" aria-labelledby="JoinGameModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="JoinGameModalLabel">Join Game Lobby</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="game-passcode" class="col-form-label">Game Code:</label>
                    <input type="text" class="form-control" id="passcode" placeholder="Game Code">
                </div>
                <div class="col-sm-4">
                    <small id="passcodeHelp" class="text-danger">
                    </small>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" onclick="testPasscode();" class=" btn btn-primary">Join</button>
            </div>
        </div>
    </div>
</div>


<!-- Scoreboard Modal -->
<div class="modal fade" id="ScoreboardModal" tabindex="-1" aria-labelledby="ScoreboardLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="ScoreboardLabel">View Scoreboard</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="recipient-name" class="col-form-label">Scoreboard Code:</label>
                    <input type="text" class="form-control" id="scoreboardcode" placeholder="Scoreboard Code">
                </div>
                <div class="col-sm-4" id="incorrect-gamecode">
                    <small id="gamecodeHelp" class="text-danger">
                    </small>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" onclick="testScoreboardCode();" class=" btn btn-primary">View Scoreboard</button>
            </div>
            <div class="col-sm-3" id="incorrect-gamecode">
                <small id="gamecodeHelp" class="text-danger">
                </small>
            </div>
        </div>
    </div>
</div>


<script>
    function testPasscode() {
        var passcode = $("#JoinGameModal #passcode").val().trim();
        var isLoaded = false;

        $.ajax({
            url: "https://csdev.samford.edu/gamesapi/games/list",
            type: 'GET',
            dataType: 'json',
            data: {},
            crossDomain: true,
            success: function (response) {
                JSON.stringify(response);
                var games = response;
                games.forEach(function (item) {
                    if (item.passcode === passcode) {
                        window.location.assign("/JudgeWaitingPage?gamecode=" + item.gamecode);
                        isLoaded = true;
                        // We'll want to put something here that stores the judge and what game they're assigned to
                    }
                });
                // Changes class of input box to indicate passcode is incorrect
                if (!isLoaded) {
                    $("#JoinGameModal #passcode").removeClass('form-control');
                    $("#JoinGameModal #passcode").addClass('form-control is-invalid');
                    document.getElementById("passcodeHelp").textContent = 'Game code is incorrect';
                }
            },
            error: function (xhr, status, error) {

                console.log("Error: " + error.message);
            }
        });
    }

    // Validates scoreboard code and redirects to scoreboard webpage with gamecode query
    function testScoreboardCode() {

        var scorecode = $("#ScoreboardModal #scoreboardcode").val().trim();
        var isLoaded = false;

        $.ajax({
            url: "https://csdev.samford.edu/gamesapi/games/list",
            type: 'GET',
            dataType: 'json',
            data: {},
            crossDomain: true,
            success: function (response) {
                JSON.stringify(response);
                var games = response;
                games.forEach(function (item) {
                    if (item.gamecode === scorecode) {
                        window.location.assign("/Scoreboard?gamecode=" + scorecode);
                        isLoaded = true;
                        // We'll want to put something here that stores the judge and what game they're assigned to
                    }
                });
                // Changes class of input box to indicate passcode is incorrect
                if (!isLoaded) {
                    $("#ScoreboardModal #scoreboardcode").removeClass('form-control');
                    $("#ScoreboardModal #scoreboardcode").addClass('form-control is-invalid');
                    document.getElementById("gamecodeHelp").textContent = 'Game code is incorrect';
                }
            },
            error: function (xhr, status, error) {

                console.log("Error: " + error.message);
            }
        });
    }

    function testGame() {
        var gameName = $("#CreateGameModal #game_title").val().trim();
        var judgeCode = $("#CreateGameModal #judge_code").val().trim();
        var scoreCode = $("#CreateGameModal #scoreboard_code").val().trim();


        $.ajax({
            url: "https://csdev.samford.edu/gamesapi/games/list",
            type: 'GET',
            dataType: 'json',
            data: {},
            crossDomain: true,
            success: function (response) {
                console.log(response);
                JSON.stringify(response);
                var games = response;
                games.forEach(function (item) {
                    if (item.title != gameName) {
                        if (item.passcode === judgeCode) {
                            document.getElementById("createJudgeCodeHelp").textContent = 'Please enter a different password';
                            return false;
                        }
                        if (item.gamecode === scoreCode) {
                            document.getElementById("createScoreCodeHelp").textContent = 'Please enter a different scoreboard code';
                            return false;
                        }
                    }
                });
            },
            error: function (xhr, status, error) {

                console.log("Error: " + error.message);
            }
        });
        return true;
    }

    // Make game with given number of questions
    function createGame() {
        var gameName = $("#CreateGameModal #game_title").val().trim();
        var judgeCode = $("#CreateGameModal #judge_code").val().trim();
        var scoreCode = $("#CreateGameModal #scoreboard_code").val().trim();
        var isLoaded = false;
        var infoValid = testGame();

        if (infoValid) {
            $.ajax({
                url: "https://csdev.samford.edu/gamesapi/games/add",
                type: 'POST',
                dataType: 'json',
                data: {
                    "title": gameName,
                    "description": 0,
                    "gamecode": scoreCode,
                    "passcode": judgeCode
                },
                crossDomain: true,
                success: function (response) {
                    window.location.assign("/PointAssignment?gamecode=" + scoreCode + "&id=" + response);
                },
                error: function (xhr, status, error) {
                    console.log("Error: " + error.message);
                }
            });
        } else {
            if (!gameName) {
                $("#CreateGameModal #game_title").removeClass('form-control');
                $("#CreateGameModal #game_title").addClass('form-control is-invalid');
                document.getElementById("createGameNameHelp").textContent = 'Please enter a valid game name';
            } else {
                $("#CreateGameModal #judge_code").addClass('form-control');
                document.getElementById("createJudgeCodeHelp").textContent = '';
            }
            if (!judgeCode) {
                $("#CreateGameModal #judge_code").removeClass('form-control');
                $("#CreateGameModal #judge_code").addClass('form-control is-invalid');
                document.getElementById("createJudgeCodeHelp").textContent = 'Please enter a valid judge code';
            } else {
                $("#CreateGameModal #judge_code").addClass('form-control');
                document.getElementById("createJudgeCodeHelp").textContent = '';
            }
            if (!scoreCode) {
                $("#CreateGameModal #score_code").removeClass('form-control');
                $("#CreateGameModal #score_code").addClass('form-control is-invalid');
                document.getElementById("createScoreCodeHelp").textContent = 'Please enter a valid scoreboard code';
            } else {
                $("#CreateGameModal #score_code").addClass('form-control');
                document.getElementById("createScoreCodeHelp").textContent = '';
            }
        }
    }

    // Start an Existing Game. Will just bring the admin to the waiting page and skip the point assignment
    function StartGame() {
        var gameName = $("#StartGameModal #gameName").val().trim();
        var isLoaded = false;

        $.ajax({
            url: "https://csdev.samford.edu/gamesapi/games/list",
            type: 'GET',
            dataType: 'json',
            data: {},
            crossDomain: true,
            success: function (response) {
                console.log(response);
                JSON.stringify(response);
                var games = response;
                games.forEach(function (item) {
                    // console.log(item);
                    if (item.title === gameName) {
                        if (item.description == "0") {
                            window.location.assign("/AdminWaiting?gamecode=" + item.title + "&id=" + item.id);
                            isLoaded = true;

                        }
                        if (item.description == "end") {
                            window.location.assign("/Scoreboard?id=" + item.id + "&gamecode=" + item.gamecode);

                        }
                        else {
                            window.location.assign("/AdminActiveQ?id=" + item.id + "&Q=" + item.description);

                        }
                        // We'll want to put something here that stores the judge and what game they're assigned to
                    }
                });
                // Changes class of input box to indicate passcode is incorrect
                if (!isLoaded) {
                    $("#StartGameModal #gameName").removeClass('form-control');
                    $("#StartGameModal #gameName").addClass('form-control is-invalid');
                    document.getElementById("errorText").textContent = 'Game Title is incorrect';
                }
            },
            error: function (xhr, status, error) {

                console.log("Error: " + error.message);
            }
        });
    }
    function restartGame() {
        var gameId = 0;
        var answers;
        var title = $("#RestartGameModal #gameTitle").val().trim();
        $.ajax({
            url: "https://csdev.samford.edu/gamesapi/games/list",
            type: 'GET',
            dataType: 'json',
            data: {},
            crossDomain: true,
            success: function (response) {
                JSON.stringify(response);
                var games = response;
                games.forEach(function (item) {
                    if (item.title == title) {
                        gameId = item.id
                        var questions = item.questions;
                        questions.forEach(function (question) {
                            question.answers.forEach(function (answer) {
                                clearAnswer(answer.id);
                            });
                        });
                        getGameId(gameId);
                        window.location.assign("/AdminWaiting?id=" + gameId + "&gamecode=" + title);

                    }
                });
            },
            error: function (xhr, status, error) {

                console.log("Error: " + error.message);

            }
        });

    }
    function getGameId(id) {
        $.ajax({
            url: "https://csdev.samford.edu/gamesapi/games/edit/" + id,
            type: 'POST',
            dataType: 'json',
            data: {
                "description": "0",
            },
            crossDomain: true,
            success: function (response) {

            },
            error: function (xhr, status, error) {

                console.log("Error: " + error.message);
            }
        });
    }
    function clearAnswer(id) {
        $.ajax({
            url: " https://csdev.samford.edu/gamesapi/answers/delete/" + id,
            type: 'POST',
            dataType: 'json',
            data: {},
            crossDomain: true,
            success: function (response) {

            },
            error: function (xhr, status, error) {

                console.log("Error: " + error.message);
            }
        });
    }
</script>